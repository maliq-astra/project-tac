/* Add at the top of the file */
body {
  font-family: 'Comic Neue', cursive;
}

.game-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 2rem;
  min-height: 100vh;
  background-color: var(--theme-background);
  color: var(--theme-text);
  transition: background-color 0.3s ease;
  position: relative;
  z-index: 2;
}

.game-board {
  display: grid;
  grid-template-columns: repeat(3, 100px);
  gap: 10px;
  margin: 2rem;
  perspective: 1000px;
  position: relative;
  width: 320px;
  height: 320px;
}

.cell {
  width: 100px;
  height: 100px;
  background: rgba(255, 255, 255, 1);
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 2.5rem;
  font-weight: bold;
  cursor: pointer;
  position: relative;
  transform-style: preserve-3d;
  transition: transform 0.3s ease;
  box-shadow: 0 4px 8px var(--theme-shadow);
  border-radius: 8px;
}

.cell:hover {
  transform: translateZ(20px);
  box-shadow: 0 8px 16px var(--theme-shadow);
}

.cell::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  background: #eee;
  transform: translateZ(-20px);
  box-shadow: 0 0 10px rgba(0,0,0,0.2);
  border-radius: 8px;
}

.cell.filled {
  cursor: not-allowed;
}

.game-setup {
  text-align: center;
  background: rgba(255, 255, 255, 1);
  padding: 2rem;
  border-radius: 15px;
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.symbol-choice button {
  margin: 10px;
  padding: 10px 30px;
  font-size: 1.5rem;
  font-weight: bold;
  cursor: pointer;
  border: 2px solid;
  border-radius: 8px;
  transition: all 0.3s ease;
  transform-style: preserve-3d;
  position: relative;
  font-family: 'Finger Paint', cursive;
}

.symbol-choice button:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 8px rgba(0,0,0,0.1);
}

.difficulty-choice button {
  margin: 10px;
  padding: 10px 30px;
  font-size: 1.2rem;
  cursor: pointer;
  border: 2px solid #ddd;
  border-radius: 8px;
  background: white;
  transition: all 0.2s ease;
  font-family: 'Comic Neue', cursive;
}

.difficulty-choice button:hover {
  background: #f0f0f0;
}

.difficulty-choice button[data-difficulty="impossible"] {
  background: linear-gradient(45deg, #ff0000, #ff00ff);
  color: white;
  text-shadow: 0 0 5px rgba(0,0,0,0.5);
}

.difficulty-choice button[data-difficulty="impossible"]:hover {
  background: linear-gradient(45deg, #ff00ff, #ff0000);
}

.start-button {
  font-size: 1.5rem;
  font-weight: bold;
  text-transform: uppercase;
  border: none;
  border-radius: 8px;
  padding: 10px 20px;
  cursor: pointer;
  transition: all 0.3s ease;
  -webkit-text-stroke: 1px rgba(0,0,0,0.1);
  animation: letterSpacing 0.3s ease;
  font-family: 'Comic Neue', cursive;
}

.start-button:hover {
  transform: scale(1.05);
  animation: buttonPulse 1.5s infinite;
}

/* Difficulty-specific styles for start button */
.start-button.easy {
  background: #4CAF50;
  color: white;
  text-shadow: 0 2px 4px rgba(76, 175, 80, 0.5),
               0 0 10px rgba(76, 175, 80, 0.3);
}

.start-button.medium {
  background: #2196F3;
  color: white;
  text-shadow: 0 2px 4px rgba(33, 150, 243, 0.5),
               0 0 10px rgba(33, 150, 243, 0.3);
}

.start-button.hard {
  background: #FF9800;
  color: white;
  text-shadow: 0 2px 4px rgba(255, 152, 0, 0.5),
               0 0 10px rgba(255, 152, 0, 0.3);
}

.start-button.impossible {
  background: linear-gradient(45deg, #ff0000, #ff00ff);
  color: white;
  text-shadow: 0 0 10px rgba(255, 0, 255, 0.5),
               0 0 20px rgba(255, 0, 255, 0.3),
               0 0 30px rgba(255, 0, 255, 0.2);
}

/* Button pulse animation */
@keyframes buttonPulse {
  0% { transform: scale(1.05); }
  50% { transform: scale(1.1); }
  100% { transform: scale(1.05); }
}

/* Special glow effect for impossible mode */
@keyframes impossibleGlow {
  from {
    text-shadow: 0 0 10px rgba(255, 0, 255, 0.5),
                 0 0 20px rgba(255, 0, 255, 0.3),
                 0 0 30px rgba(255, 0, 255, 0.2);
  }
  to {
    text-shadow: 0 0 20px rgba(255, 0, 255, 0.6),
                 0 0 30px rgba(255, 0, 255, 0.4),
                 0 0 40px rgba(255, 0, 255, 0.3);
  }
}

.game-over {
  text-align: center;
  margin-top: 20px;
}

.reset-button {
  padding: 12px 40px;
  font-size: 1.2rem;
  background: #2196F3;
  color: white;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: background 0.2s ease;
  font-family: 'Comic Neue', cursive;
}

.reset-button:hover {
  background: #1976D2;
}

.symbol {
  font-family: 'Finger Paint', cursive;
  font-size: 3.5rem;
  font-weight: bold;
  text-shadow: 2px 2px 8px rgba(0,0,0,0.2);
  transform-style: preserve-3d;
  transition: all 0.3s ease;
}

.symbol.preview {
  opacity: 0.2;
  text-shadow: none;
}

.symbol.x {
  transform: translateZ(10px);
}

.symbol.o {
  transform: translateZ(10px);
}

.cell:hover .symbol {
  transform: translateZ(20px);
}

.winning-line {
  position: absolute;
  z-index: 1;
  transition: all 0.3s ease;
}

.winning-line.horizontal {
  height: 8px;
  width: 98%;
  left: 1%;
  border-radius: 5px;
}

.winning-line.vertical {
  width: 8px;
  height: 98%;
  top: 1%;
  border-radius: 5px;
}

.winning-line.diagonal {
  width: 8px;
  height: 130%;
  top: -15%;
  left: 50%;
  border-radius: 5px;
}

/* Position horizontal lines */
.winning-line.horizontal.line-0 { top: calc(16.67% - 4px); }
.winning-line.horizontal.line-1 { top: calc(50% - 4px); }
.winning-line.horizontal.line-2 { top: calc(83.33% - 4px); }

/* Position vertical lines */
.winning-line.vertical.line-0 { left: calc(16.67% - 4px); }
.winning-line.vertical.line-1 { left: calc(50% - 4px); }
.winning-line.vertical.line-2 { left: calc(83.33% - 4px); }

/* Position diagonal lines */
.winning-line.diagonal.line-0 {
  transform: translateX(-50%) rotate(-45deg);
  transform-origin: center center;
}
.winning-line.diagonal.line-1 {
  transform: translateX(-50%) rotate(45deg);
  transform-origin: center center;
}

/* Add these new animations */
@keyframes symbolFall {
  from {
    transform: translateY(-100vh) rotate(0deg);
  }
  to {
    transform: translateY(100vh) rotate(360deg);
  }
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(-5px); }
  75% { transform: translateX(5px); }
}

/* Add background symbols container */
.falling-symbols {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100vh;
  pointer-events: none;
  z-index: 1;
  overflow: hidden;
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000;
  -webkit-transform: translateZ(0);
  -webkit-backface-visibility: hidden;
  -webkit-perspective: 1000;
}

.symbol-column {
  position: absolute;
  top: 0;
  width: 10%;
  height: 100%;
  transform: translateZ(0);
  backface-visibility: hidden;
  -webkit-transform: translateZ(0);
  -webkit-backface-visibility: hidden;
}

.falling-symbol {
  position: absolute;
  top: -50px;
  width: 100%;
  text-align: center;
  opacity: 0.2;
  font-family: 'Finger Paint', cursive;
  font-size: 3rem;
  font-weight: bold;
  animation: simpleFall linear infinite;
}

@keyframes simpleFall {
  from {
    transform: translateY(-100%) rotate(0deg);
  }
  to {
    transform: translateY(100vh) rotate(360deg);
  }
}

/* Remove the game-board.draw .cell animation and add these instead */
.game-board.draw .cell:nth-child(1) { animation: shake 0.5s ease-in-out infinite; animation-iteration-count: 20; animation-delay: 0.0s; }
.game-board.draw .cell:nth-child(2) { animation: shake 0.5s ease-in-out infinite; animation-iteration-count: 20; animation-delay: 0.1s; }
.game-board.draw .cell:nth-child(3) { animation: shake 0.5s ease-in-out infinite; animation-iteration-count: 20; animation-delay: 0.2s; }
.game-board.draw .cell:nth-child(4) { animation: shake 0.5s ease-in-out infinite; animation-iteration-count: 20; animation-delay: 0.15s; }
.game-board.draw .cell:nth-child(5) { animation: shake 0.5s ease-in-out infinite; animation-iteration-count: 20; animation-delay: 0.25s; }
.game-board.draw .cell:nth-child(6) { animation: shake 0.5s ease-in-out infinite; animation-iteration-count: 20; animation-delay: 0.1s; }
.game-board.draw .cell:nth-child(7) { animation: shake 0.5s ease-in-out infinite; animation-iteration-count: 20; animation-delay: 0.2s; }
.game-board.draw .cell:nth-child(8) { animation: shake 0.5s ease-in-out infinite; animation-iteration-count: 20; animation-delay: 0.05s; }
.game-board.draw .cell:nth-child(9) { animation: shake 0.5s ease-in-out infinite; animation-iteration-count: 20; animation-delay: 0.15s; }

.falling-symbols-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  pointer-events: none;
}

.falling-symbols {
  position: absolute;
  width: 100%;
  height: 100%;
}

.falling-symbol {
  position: absolute;
  animation: fall linear infinite;
}

@keyframes fall {
  from {
    transform: translateY(0) rotate(0deg);
  }
  to {
    transform: translateY(100vh) rotate(360deg);
  }
}